package com.mulesoft.support;

import java.util.Arrays;

import org.mule.api.MuleEventContext;
import org.mule.api.endpoint.ImmutableEndpoint;
import org.mule.api.registry.MuleRegistry;
import org.mule.endpoint.EndpointURIEndpointBuilder;
import org.mule.transport.sftp.SftpClient;
import org.mule.transport.sftp.SftpConnector;

public class SftpReSftpCreateFolder implements org.mule.api.lifecycle.Callable
{
  public SftpReSftpCreateFolder() {}
  
  public Object onCall(MuleEventContext eventContext) throws Exception
  {
    SftpConnector connector = (SftpConnector)eventContext.getMuleContext().getRegistry().lookupConnector("SFTP-Configuration");
    

    ImmutableEndpoint endpoint = ((EndpointURIEndpointBuilder)eventContext.getMuleContext().getRegistry().lookupObject("SftpEP")).buildOutboundEndpoint();
    
    SftpClient client = connector.createSftpClient(endpoint);
    client.changeWorkingDirectory(endpoint.getEndpointURI().getUri().getPath());
    


   // client.mkdir((String)endpoint.getProperty(accc"outputPattern"));
   if(!Arrays.asList(client.listDirectories()).contains((String)eventContext.getMessage().getInvocationProperty("soutputPattern"))){
	   client.mkdir((String)eventContext.getMessage().getInvocationProperty("soutputPattern"));
   }
   
    //eventContext.getMuleContext().getRegistry().get("soutputPattern")
    

    connector.releaseClient(endpoint, client);
    return eventContext.getMessage().getPayload();
  }
}
